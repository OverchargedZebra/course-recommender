# Upstream for the gRPC backend service
upstream grpc_backend {
    server backend:$BACKEND_PORT;
    keepalive 64;
}

# HTTP to HTTPS redirect server
server {
    listen $NGINX_HTTP_PORT default_server;
    listen [::]:$NGINX_HTTP_PORT default_server;
    server_name $NGINX_SERVER_NAME;

    location / {
        return 301 https://$host$request_uri;
    }
}

# Main server block for HTTPS, frontend, and gRPC proxy
server {
    listen $NGINX_HTTPS_PORT ssl default_server;
    listen [::]:$NGINX_HTTPS_PORT ssl default_server;

    http2 on;

    server_name $NGINX_SERVER_NAME;

    ssl_certificate /etc/ssl/cert.pem;
    ssl_certificate_key /etc/ssl/privkey.pem;

    # Serve the Flutter frontend from the root
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # Location block specifically for gRPC service
    location /course_recommender.CourseRecommenderService/ {
        # turn gzip off for this block only because it is messing
        # with the grpc native compression method
        gzip off;

        grpc_read_timeout 3600s;
        grpc_send_timeout 3600s;

        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        grpc_pass grpc://grpc_backend;
    }
}