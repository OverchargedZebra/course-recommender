# Upstream for grpc direct connection
# will not work with cloudflare tunnel daemon
upstream grpc_backend {
    # This will be replaced by the value of the PORT environment variable.
    server backend:$BACKEND_PORT;
    keepalive 64;
}

# upstream for grpc backend. Useful for web based services
# will be the main server for this project
upstream grpc_web_backend {
    server envoy:$ENVOY_PORT;
    keepalive 64;
}

# map the connection based on request type
# serve grpc web backend by default
map $content_type $grpc_destination {
    default http://grpc_web_backend;
    "application/grpc" grpc://grpc_backend;
}

# insecure port that would change
# we do not want to serve insecure connection
# to our users at all
server {
    listen $NGINX_HTTP_PORT default_server;
    listen [::]:$NGINX_HTTP_PORT default_server;
    server_name $NGINX_SERVER_NAME;

    location / {
        return 301 https://$host$request_uri;
    }
}

# settings for tls enabled server
server {
    listen $NGINX_HTTPS_PORT ssl default_server;
    listen [::]:$NGINX_HTTPS_PORT ssl default_server;

    http2 on;
    proxy_http_version 1.1;

    ssl_certificate /etc/ssl/cert.pem;
    ssl_certificate_key /etc/ssl/privkey.pem;

    server_name $NGINX_SERVER_NAME;

    # Location for serving the Flutter web application.
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # only set to work with grpc-web for now
    location /course_recommender {
        proxy_set_header Host $host;
        proxy_pass http://grpc_web_backend;
    }
}