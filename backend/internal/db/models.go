// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Course struct {
	ID           int64       `json:"id"`
	Difficulty   pgtype.Int2 `json:"difficulty"`
	CourseName   pgtype.Text `json:"course_name"`
	SearchVector string      `json:"search_vector"`
}

type CourseQuestion struct {
	ID              int64       `json:"id"`
	CourseID        pgtype.Int8 `json:"course_id"`
	Question        pgtype.Text `json:"question"`
	QuestionOptionA pgtype.Text `json:"question_option_a"`
	QuestionOptionB pgtype.Text `json:"question_option_b"`
	QuestionOptionC pgtype.Text `json:"question_option_c"`
	QuestionOptionD pgtype.Text `json:"question_option_d"`
	CorrectOption   pgtype.Int2 `json:"correct_option"`
}

type CourseTag struct {
	CourseID int64 `json:"course_id"`
	TagID    int64 `json:"tag_id"`
}

type DegreeCourse struct {
	DegreeTypeID int64 `json:"degree_type_id"`
	CourseID     int64 `json:"course_id"`
}

type DegreeType struct {
	ID           int64       `json:"id"`
	DegreeName   pgtype.Text `json:"degree_name"`
	SearchVector string      `json:"search_vector"`
}

type Student struct {
	ID              int64  `json:"id"`
	StudentEmail    string `json:"student_email"`
	StudentPassword string `json:"student_password"`
}

type StudentCourse struct {
	StudentID int64       `json:"student_id"`
	CourseID  int64       `json:"course_id"`
	Marks     pgtype.Int2 `json:"marks"`
	Feedback  pgtype.Bool `json:"feedback"`
}

type Tag struct {
	ID           int64       `json:"id"`
	TagName      pgtype.Text `json:"tag_name"`
	SearchVector string      `json:"search_vector"`
}
