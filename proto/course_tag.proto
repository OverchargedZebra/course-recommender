syntax = "proto3";

package course_recommender;

option go_package = "./api";

import "course.proto";
import "tag.proto";

// The CourseTag message, representing the many-to-many relationship
// between courses and tags.
message CourseTag {
  int64 course_id = 1;
  int64 tag_id = 2;
}

// Request to create a new course-tag association.
message CreateCourseTagRequest {
  int64 course_id = 1;
  int64 tag_id = 2;
}

// Response containing the newly created course-tag association.
message CreateCourseTagResponse {
  CourseTag course_tag = 1;
}

// Request to get all tags for a specific course.
message GetTagsByCourseIdRequest {
  int64 course_id = 1;
}

// Response containing a list of tags for a specific course.
message GetTagsByCourseIdResponse {
  repeated Tag tags = 1;
}

// Request to get all courses for a specific tag.
message GetCoursesByTagIdRequest {
  int64 tag_id = 1;
}

// Response containing a list of courses for a specific tag.
message GetCoursesByTagIdResponse {
  repeated Course courses = 1;
}

// Request to delete a course-tag association.
message DeleteCourseTagRequest {
  int64 course_id = 1;
  int64 tag_id = 2;
}

// Response indicating whether the deletion was successful.
message DeleteCourseTagResponse {
  bool success = 1;
}